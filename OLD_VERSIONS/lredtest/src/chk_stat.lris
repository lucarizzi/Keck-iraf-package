
int procedure	chk_stat (x, y, full_check)

real	x, y
int	full_check

begin

# inner edge of mask
	if (y < YMSKMIN)
		return (NO)

# outer edge of mask
	if (y > YMSKMAX)
		return (NO)

# outer edge of mask
	if (x > XUPP_LIM || x < XLOW_LIM)
		return (NO)


# near gaps in mosaic?
# XXX needs definition;  things like this should be contained in defines and
# limits (how close) in parameters
##	if (abs (x+250.) < 4. || abs (x) < 4. || abs(x-250.) < 4.)
#
#	if (abs (x-GAP1CEN) < GAP1HWD)
#		return (NO)
	if (abs (x-GAP2CEN) < GAP2HWD)
		return (NO)
#	if (abs (x-GAP3CEN) < GAP3HWD)
#		return (NO)

	if (abs (x) < 21.02+1.5 &&
			y > 338.08-0.7 && y < 390.25+0.7)	# XXX HARDCODES!
		return (NO)

# appears OK...
	return (YES)
end


#
# METAL_CHECK:  Checks to make sure metal limits are not violated.  Fairly
# temporary and filled with hardcodes
#

procedure	metal_check (sdat, nslit)

pointer	sdat
int	nslit

int	i
real	xmin, xmax, ymin, ymax

begin
	do i = 0, nslit-1 {

		xmin = min (XMM1(sdat,i), XMM4(sdat,i))
		xmax = max (XMM2(sdat,i), XMM3(sdat,i))

		ymin = min (YMM1(sdat,i), YMM2(sdat,i))
		ymax = max (YMM4(sdat,i), YMM4(sdat,i))

		if (xmin < -177.) {
			call eprintf ("slit=%d; xmin=%6f \n")
				call pargi (i)
				call pargr (xmin)
			call fatal (0, "xmin < -177.")
		}

		if (xmax > 177.) {
			call eprintf ("slit=%d; xmax=%6f \n")
				call pargi (i)
				call pargr (xmax)
			call fatal (0, "xmax > 177.")
		}

# XXX should check for guide stars here

		if (ymin < -132.0) {
			call eprintf ("slit=%d; ymin=%6f \n")
				call pargi (i)
				call pargr (ymin)
			call fatal (0, "ymin < -132.0")
		}

		if (ymax > 132.0) {
			call eprintf ("slit=%d; ymax=%6f \n")
				call pargi (i)
				call pargr (ymax)
			call fatal (0, "ymax > 132.0")
		}

	}
end

